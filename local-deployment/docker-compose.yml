version: "3.7"

services:
  # postgres
  postgres:
    image: docker.io/postgres:15.3-alpine3.18
    container_name: postgres
    volumes:
      - ${REMOTE_PROJECT_PATH:-.}/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/:ro
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_MULTIPLE_DATABASES: application
    ports:
      - "5432:5432"
    command:
      - --max_prepared_transactions=100

  # apache activemq-artemis
  artemis:
    image: quay.io/artemiscloud/activemq-artemis-broker:1.0.19
    container_name: artemis
    ports:
      - "8161:8161"
      - "61616:61616"
      - "5672:5672"
    environment:
      - AMQ_USER=artemis
      - AMQ_PASSWORD=artemis
      - AMQ_EXTRA_ARGS=--nio --relax-jolokia

  sender:
    profiles:
      - services
    build:
      context: ../sender
      dockerfile: ../containerfiles/Containerfile.temurin
    container_name: sender
    tmpfs:
      - /deployment/ObjectStore
    ports:
      - "8080:8080"
    env_file: services/sender/.env
    deploy:
      resources:
        limits:
          memory: 80m
        reservations:
          memory: 100m
    depends_on:
      - artemis
      - postgres
  receiver:
    profiles:
      - services
    build:
      context: ../receiver
      dockerfile: ../containerfiles/Containerfile.temurin
    container_name: receiver
    tmpfs:
      - /deployment/ObjectStore
    ports:
      - "8081:8080"
    env_file: services/receiver/.env
    deploy:
      resources:
        limits:
          memory: 80m
        reservations:
          memory: 100m
    depends_on:
      - artemis
      - postgres

  native-sender:
    profiles:
      - native-services
    build:
      context: ../sender
      dockerfile: ../containerfiles/Containerfile.distroless-native
    container_name: sender
    tmpfs:
      - /deployment/ObjectStore
    ports:
      - "8080:8080"
    env_file: services/sender/.env
    deploy:
      resources:
        limits:
          memory: 80m
        reservations:
          memory: 100m
    depends_on:
      - artemis
      - postgres
  native-receiver:
    profiles:
      - native-services
    build:
      context: ../receiver
      dockerfile: ../containerfiles/Containerfile.distroless-native
    container_name: receiver
    tmpfs:
      - /deployment/ObjectStore
    ports:
      - "8081:8080"
    env_file: services/receiver/.env
    deploy:
      resources:
        limits:
          memory: 80m
        reservations:
          memory: 100m
    depends_on:
      - artemis
      - postgres